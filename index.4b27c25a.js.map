{"mappings":"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","sources":["src/pagination.js"],"sourcesContent":["import { BASE_URL, params } from './themoviedb-api.js';\nconst { language, key } = params.option;\n\nconst movieGalleryEl = document.querySelector('.movie-list');\nconst paginationContainer = document.getElementById('pagination-links');\nconst prevButton = document.getElementById('prev');\nconst nextButton = document.getElementById('next');\n\nlet totalPages = 20;\nlet currentPage = 1;\nconst pageSize = 50;\n\nasync function fetchGenres() {\n  try {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${key}`\n    );\n    const data = await res.json();\n    return data.genres;\n  } catch (error) {\n    console.error('Error fetching genres:', error);\n    throw error;\n  }\n}\n\nasync function fetchMoviesByPage(page, pageSize) {\n  try {\n    const res = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${key}&language=${language}&page=${page}&page_size=${pageSize}`\n    );\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching movies for page ${page}:`, error);\n    throw error;\n  }\n}\n\nasync function fetchAndDisplayMovies() {\n  try {\n    const moviesData = await fetchMoviesByPage(\n      currentPage,\n      currentPage === 1 ? 20 : pageSize\n    );\n    totalPages = moviesData.total_pages;\n    createCards(moviesData.results);\n    generatePaginationLinks();\n  } catch (error) {\n    console.error('Error fetching or displaying movies:', error);\n  }\n}\n\nasync function getGenres(genre_ids) {\n  try {\n    const allGenres = await fetchGenres();\n    const matchingGenres = allGenres\n      .filter(genre => genre_ids.includes(genre.id))\n      .map(genre => genre.name);\n    return matchingGenres;\n  } catch (error) {\n    console.error('Error getting genres:', error);\n    throw error;\n  }\n}\n\nasync function createCards(movies) {\n  movieGalleryEl.innerHTML = '';\n  for (const movie of movies) {\n    const {\n      id,\n      popularity,\n      poster_path,\n      original_title,\n      title,\n      release_date,\n      overview,\n      genre_ids,\n      vote_average,\n      vote_count,\n    } = movie;\n\n    try {\n      const genres = await getGenres(genre_ids);\n      const year = release_date.split('-');\n      const movieEl = `\n        <li class=\"movie-item\" data-id=${id}>\n          <a href=\"https://image.tmdb.org/t/p/w500/${poster_path}\" class=\"movie-link\">\n            <div class=\"movie-card\" data-popularity=${popularity.toFixed(1)}>\n              <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${overview}\">\n              <div class=\"movie-details\">\n                <p class=\"movie-title\" data-title=\"${original_title}\">${title}</p>\n                <span>${genres.map(genre => ` ${genre}`)}</span>\n                <span data-year=\"${year[0]}\">| ${year[0]}</span>\n                <p data-count=\"${vote_count}\">${vote_average.toFixed(1)}</p>\n              </div>\n            </div>\n          </a>\n        </li>\n      `;\n      movieGalleryEl.insertAdjacentHTML('afterbegin', movieEl);\n    } catch (error) {\n      console.error('Error creating movie cards:', error);\n    }\n  }\n}\n\nfunction generatePaginationLinks() {\n  paginationContainer.innerHTML = '';\n  let startPage, endPage;\n\n  if (currentPage % 10 === 1) {\n    startPage = currentPage;\n    endPage = Math.min(currentPage + 9, totalPages);\n  } else {\n    startPage = Math.floor((currentPage - 1) / 10) * 10 + 1;\n    endPage = Math.min(startPage + 9, totalPages);\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    const link = document.createElement('a');\n    link.href = '#';\n    link.textContent = i;\n\n    if (i === currentPage) {\n      link.classList.add('active');\n    }\n\n    link.addEventListener('click', function (event) {\n      event.preventDefault();\n      currentPage = parseInt(this.textContent);\n      fetchAndDisplayMovies();\n    });\n    paginationContainer.appendChild(link);\n  }\n}\n\nprevButton.addEventListener('click', function () {\n  if (currentPage > 10) {\n    currentPage -= 10;\n  } else {\n    currentPage = 1;\n  }\n  fetchAndDisplayMovies();\n});\n\nnextButton.addEventListener('click', function () {\n  if (currentPage + 10 <= totalPages) {\n    currentPage += 10;\n  } else {\n    currentPage = 1;\n  }\n  fetchAndDisplayMovies();\n});\n\nwindow.addEventListener('DOMContentLoaded', fetchAndDisplayMovies);\n\nfunction localSetter() {\n  let watchlist = localStorage.getItem('watchList');\n  let queuelist = localStorage.getItem('queueList');\n\n  if (watchlist === null || watchlist.length === 0) {\n    localStorage.setItem('watchList', '[]');\n  }\n  if (queuelist === null || queuelist.length === 0) {\n    localStorage.setItem('queueList', '[]');\n  }\n}\n\nlocalSetter();\n\ngeneratePaginationLinks();\n\npaginationContainer.insertBefore(paginationContainer.children[9], null);\n"],"names":["watchlist","queuelist","$bpxeT","parcelRequire","$a05c08abba1959c4$var$_option","$7Omtz","params","option","$a05c08abba1959c4$var$language","language","$a05c08abba1959c4$var$key","key","$a05c08abba1959c4$var$movieGalleryEl","document","querySelector","$a05c08abba1959c4$var$paginationContainer","getElementById","$a05c08abba1959c4$var$prevButton","$a05c08abba1959c4$var$nextButton","$a05c08abba1959c4$var$totalPages","$a05c08abba1959c4$var$currentPage","$a05c08abba1959c4$var$fetchGenres","$a05c08abba1959c4$var$_fetchGenres","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","res","data","fetch","concat","_ctx","sent","json","genres","console","error","t0","$a05c08abba1959c4$var$fetchMoviesByPage","page","pageSize1","$a05c08abba1959c4$var$_fetchMoviesByPage","BASE_URL","$a05c08abba1959c4$var$fetchAndDisplayMovies","$a05c08abba1959c4$var$_fetchAndDisplayMovies","moviesData","total_pages","$a05c08abba1959c4$var$createCards","results","$a05c08abba1959c4$var$generatePaginationLinks","$a05c08abba1959c4$var$getGenres","genre_ids","$a05c08abba1959c4$var$_getGenres","allGenres","matchingGenres","filter","genre","includes","id","map","name","movies","$a05c08abba1959c4$var$_createCards","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","movie","popularity","poster_path","original_title","title","release_date","overview","vote_average","vote_count","year","movieEl","innerHTML","undefined","Symbol","iterator","next","done","value","split","toFixed","insertAdjacentHTML","t1","return","startPage","endPage","Math","min","floor","i","link","createElement","href","textContent","classList","add","addEventListener","event","preventDefault","parseInt","appendChild","window","localStorage","getItem","length","setItem","insertBefore","children"],"version":3,"file":"index.4b27c25a.js.map"}