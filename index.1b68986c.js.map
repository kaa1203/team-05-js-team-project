{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAEA,MAAMC,SAAEC,EAAQC,IAAEC,GAAQC,EAAAC,OAAOC,OAE3BC,EAAsBC,SAASC,eAAe,oBAC9CC,EAAaF,SAASC,eAAe,QACrCE,EAAaH,SAASC,eAAe,QAE3C,IAAIG,EAAa,GACbC,EAAc,EAgBlBC,eAAeC,EAAsBC,GACnC,IACE,MAAMC,QAfVH,eAAiCI,EAAMC,GACrC,IACE,MAAMC,QAAYC,MAChB,GAAGjB,EAAAkB,uCAAuCnB,cAAgBF,UAAiBiB,eAAkBC,KAG/F,aADmBC,EAAIG,M,CAEvB,MAAOC,GAEP,MADAC,QAAQD,MAAM,kCAAkCN,KAASM,GACnDA,C,EAMmBE,CACvBb,EACgB,IAAhBA,EAAoB,GAnBT,IAqBbD,EAAaK,EAAWU,aACxB,EAAA7B,EAAA8B,aAAYX,EAAWY,SAAS,GAChCC,EAAwBd,E,CACxB,MAAOQ,GACPC,QAAQD,MAAM,uCAAwCA,E,EAI1D,IAAIO,EAAaC,OAAOC,WAGxB,SAASH,EAAwBI,GAE/B,IAAIC,EAAWC,EAASC,EADxB9B,EAAoB+B,UAAY,GAGbD,EAAnBH,EAAa,IAAmB,EAAiB,EAE7CrB,EAAc,IAAO,GACvBsB,EAAYtB,EACZuB,EAAUG,KAAKC,IAAI3B,EAAcwB,EAAYzB,KAE7CuB,EAAiD,GAArCI,KAAKE,OAAO5B,EAAc,GAAK,IAAW,EACtDuB,EAAUG,KAAKC,IAAIL,EAAYE,EAAYzB,IAG7C,IAAK,IAAI8B,EAAIP,EAAWO,GAAKN,EAASM,IAAK,CACzC,MAAMC,EAAOnC,SAASoC,cAAc,KACpCD,EAAKE,KAAO,IACZF,EAAKG,YAAcJ,EAEfA,IAAM7B,GACR8B,EAAKI,UAAUC,IAAI,UAGrBL,EAAKM,iBAAiB,SAAS,SAAUC,GACvCA,EAAMC,iBACNtC,EAAcuC,SAASC,KAAKP,aAC5B/B,EAAsBmB,E,IAExB3B,EAAoB+C,YAAYX,E,EAIpCjC,EAAWuC,iBAAiB,SAAS,WAC/BpC,GAAe,EACjBA,EAAc,EAEdA,GAAe,EAEjBE,EAAsBgB,E,IAGxBpB,EAAWsC,iBAAiB,SAAS,WACnCpC,GAAe,EACfE,EAAsBgB,E,IAIxBD,EAAwBC,GAExBC,OAAOiB,iBAAiB,UAAU,KAC9BxB,QAAQ8B,IAAIvB,OAAOC,YACF,MAAfF,GACFD,EAAwBE,OAAOC,YAE7BF,GAAc,KAChBD,EAAwBE,OAAOC,WAAW","sources":["src/pagination.js"],"sourcesContent":["import { createCards } from './index.js'\nimport { BASE_URL, params } from './themoviedb-api.js';\nconst { language, key } = params.option;\n\nconst paginationContainer = document.getElementById('pagination-links');\nconst prevButton = document.getElementById('prev');\nconst nextButton = document.getElementById('next');\n\nlet totalPages = 20;\nlet currentPage = 1;\nconst pageSize = 50;\n\nasync function fetchMoviesByPage(page, pageSize) {\n  try {\n    const res = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${key}&language=${language}&page=${page}&page_size=${pageSize}`\n    );\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching movies for page ${page}:`, error);\n    throw error;\n  }\n}\n\nasync function fetchAndDisplayMovies(screenSize) {\n  try {\n    const moviesData = await fetchMoviesByPage(\n      currentPage,\n      currentPage === 1 ? 20 : pageSize\n    );\n    totalPages = moviesData.total_pages;\n    createCards(moviesData.results, true);\n    generatePaginationLinks(screenSize);\n  } catch (error) {\n    console.error('Error fetching or displaying movies:', error);\n  }\n}\n\nlet screenSize = window.innerWidth;\n\n\nfunction generatePaginationLinks(screenSize) {\n  paginationContainer.innerHTML = '';\n  let startPage, endPage, appendPage;\n  \n  screenSize < 780 ? appendPage = 4 : appendPage = 9; \n\n  if (currentPage % 10 === 1) {\n    startPage = currentPage;\n    endPage = Math.min(currentPage + appendPage, totalPages);\n  } else {\n    startPage = Math.floor((currentPage - 1) / 10) * 10 + 1;\n    endPage = Math.min(startPage + appendPage, totalPages);\n  }\n  \n  for (let i = startPage; i <= endPage; i++) {\n    const link = document.createElement('a');\n    link.href = '#';\n    link.textContent = i;\n\n    if (i === currentPage) {\n      link.classList.add('active');\n    }\n\n    link.addEventListener('click', function (event) {\n      event.preventDefault();\n      currentPage = parseInt(this.textContent);\n      fetchAndDisplayMovies(screenSize);\n    });\n    paginationContainer.appendChild(link);\n  }\n}\n\nprevButton.addEventListener('click', function () {\n  if (currentPage <= 1) {\n    currentPage = 1;\n  } else {\n    currentPage -= 1;\n  }\n  fetchAndDisplayMovies(screenSize);\n});\n\nnextButton.addEventListener('click', function () {\n  currentPage += 1;\n  fetchAndDisplayMovies(screenSize);\n});\n\n// document.addEventListener('DOMContentLoaded', fetchAndDisplayMovies);\ngeneratePaginationLinks(screenSize);\n\nwindow.addEventListener(\"resize\", () => {\n    console.log(window.innerWidth);\n  if (screenSize === 767) {\n    generatePaginationLinks(window.innerWidth);\n  }\n  if (screenSize >= 767) {\n    generatePaginationLinks(window.innerWidth);\n  }\n})"],"names":["$2Fivl","parcelRequire","language","$a593388852b485da$var$language","key","$a593388852b485da$var$key","$9hI1i","params","option","$a593388852b485da$var$paginationContainer","document","getElementById","$a593388852b485da$var$prevButton","$a593388852b485da$var$nextButton","$a593388852b485da$var$totalPages","$a593388852b485da$var$currentPage","async","$a593388852b485da$var$fetchAndDisplayMovies","screenSize1","moviesData","page","pageSize1","res","fetch","BASE_URL","json","error","console","$a593388852b485da$var$fetchMoviesByPage","total_pages","createCards","results","$a593388852b485da$var$generatePaginationLinks","$a593388852b485da$var$screenSize","window","innerWidth","screenSize2","startPage","endPage","appendPage","innerHTML","Math","min","floor","i","link","createElement","href","textContent","classList","add","addEventListener","event","preventDefault","parseInt","this","appendChild","log"],"version":3,"file":"index.1b68986c.js.map"}