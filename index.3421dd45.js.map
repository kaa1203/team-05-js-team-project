{"mappings":"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","sources":["src/pagination.js"],"sourcesContent":["import { BASE_URL, params } from './themoviedb-api.js';\nconst { language, key } = params.option;\n\nconst movieGalleryEl = document.querySelector('.movie-list');\nconst paginationContainer = document.getElementById('pagination-links');\nconst prevButton = document.getElementById('prev');\nconst nextButton = document.getElementById('next');\n\nlet totalPages = 20;\nlet currentPage = 1;\nconst pageSize = 50;\n\nasync function fetchGenres() {\n  try {\n    const res = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${key}`\n    );\n    const data = await res.json();\n    return data.genres;\n  } catch (error) {\n    console.error('Error fetching genres:', error);\n    throw error;\n  }\n}\n\nasync function fetchMoviesByPage(page, pageSize) {\n  try {\n    const res = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${key}&language=${language}&page=${page}&page_size=${pageSize}`\n    );\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching movies for page ${page}:`, error);\n    throw error;\n  }\n}\n\nasync function fetchAndDisplayMovies() {\n  try {\n    const moviesData = await fetchMoviesByPage(\n      currentPage,\n      currentPage === 1 ? 20 : pageSize\n    );\n    totalPages = moviesData.total_pages;\n    createCards(moviesData.results);\n    generatePaginationLinks();\n  } catch (error) {\n    console.error('Error fetching or displaying movies:', error);\n  }\n}\n\nasync function getGenres(genre_ids) {\n  try {\n    const allGenres = await fetchGenres();\n    const matchingGenres = allGenres\n      .filter(genre => genre_ids.includes(genre.id))\n      .map(genre => genre.name);\n    return matchingGenres;\n  } catch (error) {\n    console.error('Error getting genres:', error);\n    throw error;\n  }\n}\n\nasync function createCards(movies) {\n  movieGalleryEl.innerHTML = '';\n  for (const movie of movies) {\n    const {\n      id,\n      popularity,\n      poster_path,\n      original_title,\n      title,\n      release_date,\n      overview,\n      genre_ids,\n      vote_average,\n      vote_count,\n    } = movie;\n\n    try {\n      const genres = await getGenres(genre_ids);\n      const year = release_date.split('-');\n      const movieEl = `\n        <li class=\"movie-item\" data-id=${id}>\n          <a href=\"https://image.tmdb.org/t/p/w500/${poster_path}\" class=\"movie-link\">\n            <div class=\"movie-card\" data-popularity=${popularity.toFixed(1)}>\n              <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${overview}\">\n              <div class=\"movie-details\">\n                <p class=\"movie-title\" data-title=\"${original_title}\">${title}</p>\n                <span>${genres.map(genre => ` ${genre}`)}</span>\n                <span data-year=\"${year[0]}\">| ${year[0]}</span>\n                <p data-count=\"${vote_count}\">${vote_average.toFixed(1)}</p>\n              </div>\n            </div>\n          </a>\n        </li>\n      `;\n      movieGalleryEl.insertAdjacentHTML('afterbegin', movieEl);\n    } catch (error) {\n      console.error('Error creating movie cards:', error);\n    }\n  }\n}\n\nfunction generatePaginationLinks() {\n  paginationContainer.innerHTML = '';\n  let startPage, endPage;\n\n  if (currentPage % 10 === 1) {\n    startPage = currentPage;\n    endPage = Math.min(currentPage + 9, totalPages);\n  } else {\n    startPage = Math.floor((currentPage - 1) / 10) * 10 + 1;\n    endPage = Math.min(startPage + 9, totalPages);\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    const link = document.createElement('a');\n    link.href = '#';\n    link.textContent = i;\n\n    if (i === currentPage) {\n      link.classList.add('active');\n    }\n\n    link.addEventListener('click', function (event) {\n      event.preventDefault();\n      currentPage = parseInt(this.textContent);\n      fetchAndDisplayMovies();\n    });\n    paginationContainer.appendChild(link);\n  }\n}\n\nprevButton.addEventListener('click', function () {\n  if (currentPage > 10) {\n    currentPage -= 10;\n  } else {\n    currentPage = 1;\n  }\n  fetchAndDisplayMovies();\n});\n\nnextButton.addEventListener('click', function () {\n  if (currentPage + 10 <= totalPages) {\n    currentPage += 10;\n  } else {\n    currentPage = 1;\n  }\n  fetchAndDisplayMovies();\n});\n\nwindow.addEventListener('DOMContentLoaded', fetchAndDisplayMovies);\n\nfunction localSetter() {\n  let watchlist = localStorage.getItem('watchList');\n  let queuelist = localStorage.getItem('queueList');\n\n  if (watchlist === null || watchlist.length === 0) {\n    localStorage.setItem('watchList', '[]');\n  }\n  if (queuelist === null || queuelist.length === 0) {\n    localStorage.setItem('queueList', '[]');\n  }\n}\n\nlocalSetter();\n\ngeneratePaginationLinks();\n\npaginationContainer.insertBefore(paginationContainer.children[9], null);\n"],"names":["$9hI1i","parcelRequire","language","$a593388852b485da$var$language","key","$a593388852b485da$var$key","params","option","$a593388852b485da$var$movieGalleryEl","document","querySelector","$a593388852b485da$var$paginationContainer","getElementById","$a593388852b485da$var$prevButton","$a593388852b485da$var$nextButton","$a593388852b485da$var$totalPages","$a593388852b485da$var$currentPage","async","$a593388852b485da$var$fetchAndDisplayMovies","moviesData","page","pageSize1","res","fetch","BASE_URL","json","error","console","$a593388852b485da$var$fetchMoviesByPage","total_pages","movies","innerHTML","movie","id","popularity","poster_path","original_title","title","release_date","overview","genre_ids","vote_average","vote_count","genres","$a593388852b485da$var$getGenres","year","split","movieEl","toFixed","map","genre","insertAdjacentHTML","$a593388852b485da$var$createCards","results","$a593388852b485da$var$generatePaginationLinks","allGenres","$a593388852b485da$var$fetchGenres","filter","includes","name","startPage","endPage","Math","min","floor","i","link","createElement","href","textContent","classList","add","addEventListener","event","preventDefault","parseInt","this","appendChild","window","watchlist","localStorage","getItem","queuelist","length","setItem","$a593388852b485da$var$localSetter","insertBefore","children"],"version":3,"file":"index.3421dd45.js.map"}