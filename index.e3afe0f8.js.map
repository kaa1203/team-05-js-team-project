{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAEA,MAAMC,SAAEC,EAAQC,IAAEC,GAAQC,EAAAC,OAAOC,OAE3BC,EAAsBC,SAASC,eAAe,oBAC9CC,EAAaF,SAASC,eAAe,QACrCE,EAAaH,SAASC,eAAe,QAE3C,IAAIG,EAAa,GACbC,EAAc,EAgBlBC,eAAeC,IACb,IACE,MAAMC,QAfVF,eAAiCG,EAAMC,GACrC,IACE,MAAMC,QAAYC,MAChB,GAAGhB,EAAAiB,uCAAuClB,cAAgBF,UAAiBgB,eAAkBC,KAG/F,aADmBC,EAAIG,M,CAEvB,MAAOC,GAEP,MADAC,QAAQD,MAAM,kCAAkCN,KAASM,GACnDA,C,EAMmBE,CACvBZ,EACgB,IAAhBA,EAAoB,GAnBT,IAqBbD,EAAaI,EAAWU,aACxB,EAAA5B,EAAA6B,aAAYX,EAAWY,SAAS,GAChCC,G,CACA,MAAON,GACPC,QAAQD,MAAM,uCAAwCA,E,EAI1D,SAASM,IAEP,IAAIC,EAAWC,EADfxB,EAAoByB,UAAY,GAG5BnB,EAAc,IAAO,GACvBiB,EAAYjB,EACZkB,EAAUE,KAAKC,IAAIrB,EAAc,EAAGD,KAEpCkB,EAAiD,GAArCG,KAAKE,OAAOtB,EAAc,GAAK,IAAW,EACtDkB,EAAUE,KAAKC,IAAIJ,EAAY,EAAGlB,IAGpC,IAAK,IAAIwB,EAAIN,EAAWM,GAAKL,EAASK,IAAK,CACzC,MAAMC,EAAO7B,SAAS8B,cAAc,KACpCD,EAAKE,KAAO,IACZF,EAAKG,YAAcJ,EAEfA,IAAMvB,GACRwB,EAAKI,UAAUC,IAAI,UAGrBL,EAAKM,iBAAiB,SAAS,SAAUC,GACvCA,EAAMC,iBACNhC,EAAciC,SAASC,KAAKP,aAC5BzB,G,IAEFR,EAAoByC,YAAYX,E,EAIpC3B,EAAWiC,iBAAiB,SAAS,WAC/B9B,EAAc,GAChBA,GAAe,GAEfA,EAAc,EAEhBE,G,IAGFJ,EAAWgC,iBAAiB,SAAS,WAC/B9B,EAAc,IAAMD,EACtBC,GAAe,GAEfA,EAAc,EAEhBE,G,IAIFc","sources":["src/pagination.js"],"sourcesContent":["import { createCards } from './index.js'\nimport { BASE_URL, params } from './themoviedb-api.js';\nconst { language, key } = params.option;\n\nconst paginationContainer = document.getElementById('pagination-links');\nconst prevButton = document.getElementById('prev');\nconst nextButton = document.getElementById('next');\n\nlet totalPages = 20;\nlet currentPage = 1;\nconst pageSize = 50;\n\nasync function fetchMoviesByPage(page, pageSize) {\n  try {\n    const res = await fetch(\n      `${BASE_URL}/trending/movie/day?api_key=${key}&language=${language}&page=${page}&page_size=${pageSize}`\n    );\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching movies for page ${page}:`, error);\n    throw error;\n  }\n}\n\nasync function fetchAndDisplayMovies() {\n  try {\n    const moviesData = await fetchMoviesByPage(\n      currentPage,\n      currentPage === 1 ? 20 : pageSize\n    );\n    totalPages = moviesData.total_pages;\n    createCards(moviesData.results, true);\n    generatePaginationLinks();\n  } catch (error) {\n    console.error('Error fetching or displaying movies:', error);\n  }\n}\n\nfunction generatePaginationLinks() {\n  paginationContainer.innerHTML = '';\n  let startPage, endPage;\n\n  if (currentPage % 10 === 1) {\n    startPage = currentPage;\n    endPage = Math.min(currentPage + 9, totalPages);\n  } else {\n    startPage = Math.floor((currentPage - 1) / 10) * 10 + 1;\n    endPage = Math.min(startPage + 9, totalPages);\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    const link = document.createElement('a');\n    link.href = '#';\n    link.textContent = i;\n\n    if (i === currentPage) {\n      link.classList.add('active');\n    }\n\n    link.addEventListener('click', function (event) {\n      event.preventDefault();\n      currentPage = parseInt(this.textContent);\n      fetchAndDisplayMovies();\n    });\n    paginationContainer.appendChild(link);\n  }\n}\n\nprevButton.addEventListener('click', function () {\n  if (currentPage > 10) {\n    currentPage -= 10;\n  } else {\n    currentPage = 1;\n  }\n  fetchAndDisplayMovies();\n});\n\nnextButton.addEventListener('click', function () {\n  if (currentPage + 10 <= totalPages) {\n    currentPage += 10;\n  } else {\n    currentPage = 1;\n  }\n  fetchAndDisplayMovies();\n});\n\n// document.addEventListener('DOMContentLoaded', fetchAndDisplayMovies);\ngeneratePaginationLinks();\n// paginationContainer.insertBefore(paginationContainer.children[9], null); \n"],"names":["$2Fivl","parcelRequire","language","$a593388852b485da$var$language","key","$a593388852b485da$var$key","$9hI1i","params","option","$a593388852b485da$var$paginationContainer","document","getElementById","$a593388852b485da$var$prevButton","$a593388852b485da$var$nextButton","$a593388852b485da$var$totalPages","$a593388852b485da$var$currentPage","async","$a593388852b485da$var$fetchAndDisplayMovies","moviesData","page","pageSize1","res","fetch","BASE_URL","json","error","console","$a593388852b485da$var$fetchMoviesByPage","total_pages","createCards","results","$a593388852b485da$var$generatePaginationLinks","startPage","endPage","innerHTML","Math","min","floor","i","link","createElement","href","textContent","classList","add","addEventListener","event","preventDefault","parseInt","this","appendChild"],"version":3,"file":"index.e3afe0f8.js.map"}